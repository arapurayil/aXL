# This is a workflow to generate aXL automatically

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow every 8 hours or on push/pull request events but only for the main branch
  schedule:
    - cron:  '0 */8 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
                
      # Install hostlist-compiler
      - name: Install hostlist-compiler
        run: npm i -g @adguard/hostlist-compiler

      # Generate lists, commit and push
      - name: Generate lists
        run: |
          dir_path=$(pwd)
          sed -i "s|localdirpath|$dir_path|g" "$dir_path/config/config-main.json"
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python scraper.py
          python generator.py
      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add --all
          git commit -m "auto update"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
